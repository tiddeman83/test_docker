version: "3.8"

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      # - "--log.level=DEBUG"
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=tijmenbaas83@outlook.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # redirect port 80 -> 443
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    ports:
      - "443:443"
      - "80:80"
      # - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  frontend_test:
    build: ./node
    #image: react-app
    container_name: "react app"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend_test.rule=Host(`tester.tech-boss.nl`)"
      - "traefik.http.routers.frontend_test.entrypoints=websecure"
      - "traefik.http.routers.frontend_test.tls.certresolver=myresolver"
      # use compression
      - "traefik.http.routers.frontend_test.middlewares=test-compress"
      - "traefik.http.middlewares.test-compress.compress=true"

  api_test:
    build: ./flask
    #image: flask-app
    container_name: "api"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api_test.rule=Host(`testerapi.tech-boss.nl`)"
      - "traefik.http.routers.api_test.entrypoints=websecure"
      - "traefik.http.routers.api_test.tls.certresolver=myresolver"
    
